@import "alias";
@import "color";

.cur-p () {
  .cur(pointer);
  .us(none);
}
.pos-r () {
  .pos(relative);
}
.d-n () {
  .d(none);
}
.d-b () {
  .d(block);
}
.d-fx () {
  .d(flex);
}
.d-ib () {
  .d(inline-block);
}
.d-ibt () {
  .d(inline-block);
  .va(top);
}
.d-ibm () {
  .d(inline-block);
  .va(middle);
}
.v-h () {
  .v(hidden);
}
.v-v () {
  .v(visible);
}
.of-h () {
  .of(hidden);
}
.of-v () {
  .of(visible);
}
.of-s () {
  .of(scroll);
  -webkit-overflow-scrolling: touch;
}
.of-hs () {
  .of(hidden, scroll);
  -webkit-overflow-scrolling: touch;
}

.font-cc (@lh) {
  .ta(center);
  .lh(@lh);
}
// 文本隐藏
.font-hidden () {
  .wrap () {
    .of-h;
    .to(ellipsis);
    .ws(normal);
  }
  .nowrap () {
    .of-h;
    .to(ellipsis);
    .ws(nowrap);
  }
}
// 动画 @duration: 持续时间,  @delay: 延迟播放, @count: 播放次数(infinite: 无限次播放)
.animation (@name, @duration: 1s, @delay: 0s, @count: infinite) {
  .ann(@name);
  .andur(@duration);
  .andel(@delay);
  .anc(@count);
}
.animation-state (@duration: 1s, @delay: 0s, @count: infinite) {
  .andur(@duration);
  .andel(@delay);
  .anc(@count);
}
.transition (@property, @duration: 1s, @delay: 0s) {
  .tsp(@property);
  .tsdur(@duration);
  .tsdel(@delay);
}