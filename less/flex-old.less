@import "mixins";
@import "alias-old";

// 水平排列不换行，垂直占满高度
.flex-x {
  .flex>.box;
}
// 水平占满宽度，垂直排列不换行
.flex-y {
  .flex>.box;
  .fxd>.column;
}
// 水平占满宽度向下换行、垂直靠两边
.flex-cb {
  .flex>.box;
  .fxd>.column;
  .jc>.between;
}
// 水平居中向下换行、垂直靠两边
.flex-cbc {
  .flex>.box;
  .fxd>.column;
  .jc>.between;
  .ai>.center;
}
// 水平居中向下换行、垂直居中
.flex-ccc {
  .flex>.box;
  .fxd>.column;
  .jc>.center;
  .ai>.center;
}
// 水平占满宽度向下换行、排满向右换列
.flex-cw {
  .flex>.box;
  .fxd>.column;
  .fxw>.wrap;
}

// 水平平分排列不换行，垂直占满高度
.flex-a {
  .flex>.box;
  .jc>.around;
}
// 水平平分排列不换行，垂直居中
.flex-ac {
  .flex>.box;
  .jc>.around;
  .ai>.center;
}
// 水平平分排列不换行，垂直靠上
.flex-as {
  .flex>.box;
  .jc>.around;
  .ai>.start;
}

// 水平靠两边排列不换行，垂直占满高度
.flex-b {
  .flex>.box;
  .jc>.between;
}
// 水平靠两边排列不换行，垂直居中
.flex-bc {
  .flex>.box;
  .jc>.between;
  .ai>.center;
}
// 水平靠两边排列不换行，垂直靠上
.flex-bs {
  .flex>.box;
  .jc>.between;
  .ai>.start;
}

// 水平居中排列不换行，垂直占满高度
.flex-c {
  .flex>.box;
  .jc>.center;
}
// 水平居中排列不换行，垂直居中
.flex-cc {
  .flex>.box;
  .jc>.center;
  .ai>.center;
}
// 水平居中排列不换行，垂直靠上
.flex-cs {
  .flex>.box;
  .jc>.center;
  .ai>.start;
}

// 水平排满换行，垂直占满高度
.flex-w {
  .flex>.box;
  .fxw>.wrap;
}
// 水平平分排列换行，垂直占满高度
.flex-wa {
  .flex>.box;
  .fxw>.wrap;
  .jc>.around;
}
// 水平平分排列换行，垂直居中
.flex-wac {
  .flex>.box;
  .fxw>.wrap;
  .jc>.around;
  .ai>.center;
}
// 水平平分排列换行，垂直居中
.flex-was {
  .flex>.box;
  .fxw>.wrap;
  .jc>.around;
  .ai>.start;
}

// 水平靠两边排列换行，垂直占满高度
.flex-wb {
  .flex>.box;
  .fxw>.wrap;
  .jc>.between;
}
// 水平靠两边排列换行，垂直居中
.flex-wbc {
  .flex>.box;
  .fxw>.wrap;
  .jc>.between;
  .ai>.center;
}
// 水平靠两边排列换行，垂直居中
.flex-wbs {
  .flex>.box;
  .fxw>.wrap;
  .jc>.between;
  .ai>.start;
}

// 水平居中排列换行，垂直占满高度
.flex-wc {
  .flex>.box;
  .fxw>.wrap;
  .jc>.center;
}
// 水平居中排列换行，垂直居中
.flex-wcc {
  .flex>.box;
  .fxw>.wrap;
  .jc>.center;
  .ai>.center;
}
// 水平居中排列换行，垂直居中
.flex-wcs {
  .flex>.box;
  .fxw>.wrap;
  .jc>.center;
  .ai>.start;
}

// 向左排列、配合使用
.reverse-x {
  .fxd>.row-r;
}
// 向上排列、配合使用
.reverse-y {
  .fxd>.column-r;
}
// 向上换行、配合使用
.reverse-w {
  .fxw>.wrap-r;
}

// .flex-test {
//   .flex>.box;
//   .fxd(row);
//   .fxw(nowrap);
//   .jc(start);
//   .ai(center);
//   .ac(stretch);
// }